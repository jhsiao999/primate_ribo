(res.riborna$int.qval < .01) & ii_sig_RNA_DE & ii_proNULLrna
ii_attenuated_set <- ( (dmat_unnormed$rna * dmat_unnormed$ribo < 0) |
( abs(dmat_unnormed$ribo) < abs(dmat_unnormed$rna) ) ) &
(res.riborna$int.qval < .01) & ii_sig_RNA_DE & ii_proNULLrna
index_list <- list(ii_proNULLrna, ii_rnaGTpro, ii_proGTrna)
boxplot(abs(dmat_unnormed$rna[ii_proNULLrna]),
abs(dmat_unnormed$ribo[ii_proNULLrna]),
abs(dmat_unnormed$pro[ii_proNULLrna]),
axes = F, ylim = c(0, 10))
axis(1, at = c(1,2,3), labels = c("RNA", "Ribo", "Protein"),
col = "white")
axis(2)
points_cols <- c("Scarlet", "Sunglow", "Shamrock")
points(rep(1, sum(ii_proNULLrna)),
abs(dmat_unnormed$rna[ii_proNULLrna]),
pch = 19, cex = .5,
col = crayon[points_cols[1]] )
points(rep(2, sum(ii_proNULLrna)), abs(dmat_unnormed$ribo[ii_proNULLrna]),
pch = 19, cex = .5,
col = crayon[points_cols[2]] )
points(rep(3, sum(ii_proNULLrna)),
abs(dmat_unnormed$pro[ii_proNULLrna]),
pch = 19, cex = .5,
col = crayon[points_cols[3]] )
text(2, 10, adj = 0,
label = paste("RNA ~ Protein", sum(ii_proNULLrna), "genes" ) )
text(2, 9, adj = 0,
label = paste("RNA vs. Ribo sig. diff.",
sum(ii_proNULLrna & (res.riborna$int.qval<.01)), "genes; \n",
round(100*sum(ii_proNULLrna & (res.riborna$int.qval<.01))/
sum(ii_proNULLrna), 2), "%") )
text(2, 8, adj = 0,
label = paste("Attenuated translation",
sum(ii_attenuated_set), "genes; \n",
round(100*sum(ii_attenuated_set)/sum(ii_proNULLrna), 2), "%") )
text(2, 7, adj = 0,
label = paste("Enhanced translation",
sum(ii_enhanced_set), "genes; \n",
round(100*sum(ii_enhanced_set)/sum(ii_proNULLrna), 2), "%") )
title(main = "RNA ~ Protein, no sig. diff. divergence",
ylab = "absolute divergence (human-chimpanzee fold change)")
2999-6-62
ii_sig_RNA_DE <- rnaRes.Q$qval < .01
ii_enhanced_set <- ( (dmat_unnormed$rna * dmat_unnormed$pro > 0) &
( abs(dmat_unnormed$pro) > abs(dmat_unnormed$rna) ) ) &
(res.riborna$int.qval < .01) & ii_sig_RNA_DE & ii_proNULLrna
ii_attenuated_set <- ( (dmat_unnormed$rna * dmat_unnormed$pro < 0) |
( abs(dmat_unnormed$pro) < abs(dmat_unnormed$rna) ) ) &
(res.riborna$int.qval < .01) & ii_sig_RNA_DE & ii_proNULLrna
sum(ii_enhanced_set)
sum(ii_attenuated_set)
ii_sig_RNA_DE <- rnaRes.Q$qval < .01
ii_enhanced_set_rna_ribo <-
( (dmat_unnormed$rna * dmat_unnormed$ribo > 0) &
( abs(dmat_unnormed$ribo) > abs(dmat_unnormed$rna) ) ) &
(res.riborna$int.qval < .01) & ii_sig_RNA_DE & ii_proNULLrna
ii_attenuated_set_rna_ribo <-
( (dmat_unnormed$rna * dmat_unnormed$ribo < 0) |
( abs(dmat_unnormed$ribo) < abs(dmat_unnormed$rna) ) ) &
(res.riborna$int.qval < .01) & ii_sig_RNA_DE & ii_proNULLrna
plot_mat <- matrix(0, 2, 2)
rownames(plot_mat) <- c("RNA-Ribo enhanced", "RNA-Ribo attenuated")
colnames(plot_mat) <- c("RNA-Protein enhanced", "RNA-Protein attenuated")
plot_mat[1,1] <- sum(ii_enhanced_set_rna_ribo*ii_enhanced_set)
plot_mat[1,2] <- sum(ii_enhanced_set_rna_ribo*ii_attenuated_set)
plot_mat[2,1] <- sum(ii_attenuated_set_rna_ribo*ii_enhanced_set)
plot_mat[2,2] <- sum(ii_attenuated_set_rna_ribo*ii_attenuated_set)
plot_mat
binom.test(plot_mat[2,2], rowSums(plot_mat)[2])
binom.test(plot_mat[1,1], rowSums(plot_mat)[1])
plot_mat
binom.test(plot_mat[2,2], rowSums(plot_mat)[2])
binom.test(plot_mat[1,1], rowSums(plot_mat)[1])
plot_mat
binom.test( sum(ii_rnaGTpro*ii_rnaGTribo),
sum(ii_rnaGTpro), p = 61/66)
binom.test(sum(ii_proGTrna*ii_riboGTrna),
sum(ii_proGTrna), p = 4/5)
library(Biobase)
## Set working directories
dir <- "../"
figdir <- file.path(dir,"figures")
rdadir <- file.path(dir,"rdas")
datadir <- file.path(dir, "data")
## Use broman package for colors
require(broman)
crayon <- brocolors("crayons")
## Load customized packages
require(devtools)
require(Humanzee)
## load LRT results of RNA vs. Protein divergence
load(file.path(rdadir,"rnapro.rda"))
## load LRT results of Ribo vs. RNA divergence
load(file.path(rdadir,"TEnew.rda"))
## Compute fold changes based on un-normalized data
## from the object eSetRRP.log2 in eSetRRP.rda
load(file.path(rdadir,"eSetRRP.rda"))
eSet.temp = eSetRRP.log2[ ,eSetRRP.log2$species!="rhesus"]
fc.mat=lapply(seq_along(c("human","chimp")), function(i) {
ii = eSet.temp$species==c("human","chimp")[i]
eSet.tt = eSet.temp[,ii]
emat = lapply(seq_along(c("ribo","rna","protein")),function(j) {
jj = eSet.tt$seqData==c("ribo","rna","protein")[j]
rowMeans(exprs(eSet.tt[,jj]),na.rm=TRUE)
})
emat=do.call(cbind,emat)
colnames(emat)=c("ribo","rna","protein")
return(data.frame(emat))
})
names(fc.mat)=c("human","chimp")
dmat_unnormed = data.frame(ribo=fc.mat$human$ribo-fc.mat$chimp$ribo,
rna=fc.mat$human$rna-fc.mat$chimp$rna,
pro=fc.mat$human$protein-fc.mat$chimp$protein)
xy.rnapro = data.frame(rna=dmat_unnormed$rna,
pro=dmat_unnormed$pro)
xy.riborna = data.frame(rna=dmat_unnormed$rna,
ribo=dmat_unnormed$ribo)
xy.ribopro = data.frame(ribo=dmat_unnormed$ribo,
pro=dmat_unnormed$pro)
## Definition of enhanced, attenuated, and null divergence in this document
## RNA-Ribo
ii_sig_TE <- res.riborna$int.qval < .01
ii_sig_RNA_DE <- rnaRes.Q$qval < .01
ii_sig_Ribo_DE <- riboRes.Q$qval < .01
# sig. translation efficiency,
# no sig. DE at RNA level & no sig. DE at Ribo level
ii_TE_1 <- ii_sig_TE & !ii_sig_RNA_DE & !ii_sig_Ribo_DE
sum(ii_TE_1)
# sig. translation efficiency,
# no sig. DE at RNA level but sig. DE at Ribo level
ii_TE_2 <- (ii_sig_TE) & !ii_sig_RNA_DE & ii_sig_Ribo_DE
sum(ii_TE_2)
# sig. translation efficiency,
# sig. DE at RNA level
# Enhanced divergence
ii_riboGTrna <-
(ii_sig_TE) & ii_sig_RNA_DE &
( (abs(xy.riborna$ribo) > abs(xy.riborna$rna)) &
(xy.riborna$rna * xy.riborna$ribo > 0 ) )
sum(ii_riboGTrna)
# sig. translation efficiency,
# no sig. DE at RNA level but sig. DE at Ribo level
# Attenuated divergence
ii_rnaGTribo <-
(ii_sig_TE) & ii_sig_RNA_DE &
( (abs(xy.riborna$rna) > abs(xy.riborna$ribo) ) |
(xy.riborna$rna * xy.riborna$ribo < 0) )
sum(ii_rnaGTribo)
## RNA-Protein
# Attenuated divergence
ii_rnaGTpro <-
(res.rnapro$int.qval < .01) & ii_sig_RNA_DE &
( (abs(xy.rnapro$rna) > abs(xy.rnapro$pro) ) |
(xy.rnapro$rna * xy.rnapro$pro < 0) )
# Enhanced divegence
ii_proGTrna <-
(res.rnapro$int.qval < .01) & ii_sig_RNA_DE &
( (abs(xy.rnapro$pro) > abs(xy.rnapro$rna)) &
(xy.rnapro$rna * xy.rnapro$rna > 0 ) )
# Prop. of RNA-protein attenuated genes among RNA-Ribo attenuated genes
sum(ii_rnaGTpro & ii_rnaGTribo)/sum(ii_rnaGTribo)
# Prop. of RNA-protein enhanced genes among RNA-Ribo enhanced genes
sum(ii_proGTrna & ii_riboGTrna)/sum(ii_riboGTrna)
load(file.path(rdadir,"DE.rda"))
## Compute fold changes based on un-normalized data
## from the object eSetRRP.log2 in eSetRRP.rda
load(file.path(rdadir,"eSetRRP.rda"))
eSet.temp = eSetRRP.log2[ ,eSetRRP.log2$species!="rhesus"]
fc.mat=lapply(seq_along(c("human","chimp")), function(i) {
ii = eSet.temp$species==c("human","chimp")[i]
eSet.tt = eSet.temp[,ii]
emat = lapply(seq_along(c("ribo","rna","protein")),function(j) {
jj = eSet.tt$seqData==c("ribo","rna","protein")[j]
rowMeans(exprs(eSet.tt[,jj]),na.rm=TRUE)
})
emat=do.call(cbind,emat)
colnames(emat)=c("ribo","rna","protein")
return(data.frame(emat))
})
names(fc.mat)=c("human","chimp")
dmat_unnormed = data.frame(ribo=fc.mat$human$ribo-fc.mat$chimp$ribo,
rna=fc.mat$human$rna-fc.mat$chimp$rna,
pro=fc.mat$human$protein-fc.mat$chimp$protein)
xy.rnapro = data.frame(rna=dmat_unnormed$rna,
pro=dmat_unnormed$pro)
xy.riborna = data.frame(rna=dmat_unnormed$rna,
ribo=dmat_unnormed$ribo)
xy.ribopro = data.frame(ribo=dmat_unnormed$ribo,
pro=dmat_unnormed$pro)
## Definition of enhanced, attenuated, and null divergence in this document
## RNA-Ribo
ii_sig_TE <- res.riborna$int.qval < .01
ii_sig_RNA_DE <- rnaRes.Q$qval < .01
ii_sig_Ribo_DE <- riboRes.Q$qval < .01
# sig. translation efficiency,
# no sig. DE at RNA level & no sig. DE at Ribo level
ii_TE_1 <- ii_sig_TE & !ii_sig_RNA_DE & !ii_sig_Ribo_DE
sum(ii_TE_1)
# sig. translation efficiency,
# no sig. DE at RNA level but sig. DE at Ribo level
ii_TE_2 <- (ii_sig_TE) & !ii_sig_RNA_DE & ii_sig_Ribo_DE
sum(ii_TE_2)
# sig. translation efficiency,
# sig. DE at RNA level
# Enhanced divergence
ii_riboGTrna <-
(ii_sig_TE) & ii_sig_RNA_DE &
( (abs(xy.riborna$ribo) > abs(xy.riborna$rna)) &
(xy.riborna$rna * xy.riborna$ribo > 0 ) )
sum(ii_riboGTrna)
# sig. translation efficiency,
# no sig. DE at RNA level but sig. DE at Ribo level
# Attenuated divergence
ii_rnaGTribo <-
(ii_sig_TE) & ii_sig_RNA_DE &
( (abs(xy.riborna$rna) > abs(xy.riborna$ribo) ) |
(xy.riborna$rna * xy.riborna$ribo < 0) )
sum(ii_rnaGTribo)
## RNA-Protein
# Attenuated divergence
ii_rnaGTpro <-
(res.rnapro$int.qval < .01) & ii_sig_RNA_DE &
( (abs(xy.rnapro$rna) > abs(xy.rnapro$pro) ) |
(xy.rnapro$rna * xy.rnapro$pro < 0) )
# Enhanced divegence
ii_proGTrna <-
(res.rnapro$int.qval < .01) & ii_sig_RNA_DE &
( (abs(xy.rnapro$pro) > abs(xy.rnapro$rna)) &
(xy.rnapro$rna * xy.rnapro$rna > 0 ) )
# Prop. of RNA-protein attenuated genes among RNA-Ribo attenuated genes
sum(ii_rnaGTpro & ii_rnaGTribo)/sum(ii_rnaGTribo)
# Prop. of RNA-protein enhanced genes among RNA-Ribo enhanced genes
sum(ii_proGTrna & ii_riboGTrna)/sum(ii_riboGTrna)
mat_riborna <- matrix(0, 2, 2,
dimnames = list(attenuation = c("yes", "no"),
enhancement = c("yes", "no") ) )
mat_riborna[1,1] <- sum( (ii_riboGTrna) & (ii_rnaGTribo) )
mat_riborna[2,2] <- sum( !(ii_riboGTrna) & !(ii_rnaGTribo) )
mat_riborna[1,2] <- sum( (ii_riboGTrna) & !(ii_rnaGTribo) )
mat_riborna[2,1] <-  sum( !(ii_riboGTrna) & (ii_rnaGTribo) )
mcnemar.test(mat_riborna)
mat_riborna
## Make a data matrix for Fisher's exact test input
mat_fish <-
matrix(0, 2, 2,
dimnames = list( rna_ribo = c("Attenuation", "Enhancement"),                              rna_pro = c("Attenuation", "Enhancement") ) )
mat_fish[1,1] <- sum(ii_TE_4*ii_rnaGTpro)
mat_fish[2,2] <- sum(ii_riboGTrna*ii_proGTrna)
mat_fish[1,2] <- sum(ii_rnaGTribo*ii_proGTrna)
mat_fish[2,1] <- sum(ii_riboGTrna*ii_rnaGTpro)
## Fisher's exact test
fisher.test(mat_fish, alternative = "two.sided")
mat_fish
mat_fish
mat_riborn
mat_riborna
## Compute fold changes based on un-normalized data
## from the object eSetRRP.log2 in eSetRRP.rda
load(file.path(rdadir,"eSetRRP.rda"))
eSet.temp = eSetRRP.log2[ ,eSetRRP.log2$species!="rhesus"]
fc.mat=lapply(seq_along(c("human","chimp")), function(i) {
ii = eSet.temp$species==c("human","chimp")[i]
eSet.tt = eSet.temp[,ii]
emat = lapply(seq_along(c("ribo","rna","protein")),function(j) {
jj = eSet.tt$seqData==c("ribo","rna","protein")[j]
rowMeans(exprs(eSet.tt[,jj]),na.rm=TRUE)
})
emat=do.call(cbind,emat)
colnames(emat)=c("ribo","rna","protein")
return(data.frame(emat))
})
names(fc.mat)=c("human","chimp")
dmat_unnormed = data.frame(ribo=fc.mat$human$ribo-fc.mat$chimp$ribo,
rna=fc.mat$human$rna-fc.mat$chimp$rna,
pro=fc.mat$human$protein-fc.mat$chimp$protein)
xy.rnapro = data.frame(rna=dmat_unnormed$rna,
pro=dmat_unnormed$pro)
xy.riborna = data.frame(rna=dmat_unnormed$rna,
ribo=dmat_unnormed$ribo)
xy.ribopro = data.frame(ribo=dmat_unnormed$ribo,
pro=dmat_unnormed$pro)
ii_sig_TE <- res.riborna$int.qval < .01
ii_sig_RNA_DE <- rnaRes.Q$qval < .01
ii_sig_Ribo_DE <- riboRes.Q$qval < .01
ii_TE_1 <- ii_sig_TE & !ii_sig_RNA_DE & !ii_sig_Ribo_DE
sum(ii_TE_1)
# sig. translation efficiency,
# no sig. DE at RNA level but sig. DE at Ribo level
ii_TE_2 <- (ii_sig_TE) & !ii_sig_RNA_DE & ii_sig_Ribo_DE
sum(ii_TE_2)
# sig. translation efficiency,
# sig. DE at RNA level
# Enhanced divergence
ii_riboGTrna <-
(ii_sig_TE) & ii_sig_RNA_DE &
( (abs(xy.riborna$ribo) > abs(xy.riborna$rna)) &
(xy.riborna$rna * xy.riborna$ribo > 0 ) )
sum(ii_riboGTrna)
# sig. translation efficiency,
# no sig. DE at RNA level but sig. DE at Ribo level
# Attenuated divergence
ii_rnaGTribo <-
(ii_sig_TE) & ii_sig_RNA_DE &
( (abs(xy.riborna$rna) > abs(xy.riborna$ribo) ) |
(xy.riborna$rna * xy.riborna$ribo < 0) )
sum(ii_rnaGTribo)
# Attenuated divergence
ii_rnaGTpro <-
(res.rnapro$int.qval < .01) & ii_sig_RNA_DE &
( (abs(xy.rnapro$rna) > abs(xy.rnapro$pro) ) |
(xy.rnapro$rna * xy.rnapro$pro < 0) )
# Enhanced divegence
ii_proGTrna <-
(res.rnapro$int.qval < .01) & ii_sig_RNA_DE &
( (abs(xy.rnapro$pro) > abs(xy.rnapro$rna)) &
(xy.rnapro$rna * xy.rnapro$rna > 0 ) )
# Prop. of RNA-protein attenuated genes among RNA-Ribo attenuated genes
sum(ii_rnaGTpro & ii_rnaGTribo)/sum(ii_rnaGTribo)
# Prop. of RNA-protein enhanced genes among RNA-Ribo enhanced genes
sum(ii_proGTrna & ii_riboGTrna)/sum(ii_riboGTrna)
mat_riborna <- matrix(0, 2, 2,
dimnames = list(attenuation = c("yes", "no"),
enhancement = c("yes", "no") ) )
mat_riborna[1,1] <- sum( (ii_riboGTrna) & (ii_rnaGTribo) )
mat_riborna[2,2] <- sum( !(ii_riboGTrna) & !(ii_rnaGTribo) )
mat_riborna[1,2] <- sum( (ii_riboGTrna) & !(ii_rnaGTribo) )
mat_riborna[2,1] <-  sum( !(ii_riboGTrna) & (ii_rnaGTribo) )
mat_riborna
mcnemar.test(mat_riborna)
mat_riborna
mat_fish <-
matrix(0, 2, 2,
dimnames = list( rna_ribo = c("Attenuation", "Enhancement"),                              rna_pro = c("Attenuation", "Enhancement") ) )
mat_fish[1,1] <- sum(ii_rnaGTribo*ii_rnaGTpro)
mat_fish[2,2] <- sum(ii_riboGTrna*ii_proGTrna)
mat_fish[1,2] <- sum(ii_rnaGTribo*ii_proGTrna)
mat_fish[2,1] <- sum(ii_riboGTrna*ii_rnaGTpro)
mat_fish
sum(ii_rnaGTribo)
sum(ii_rnaGTribo % ii_rnaGTpro)
sum(ii_rnaGTribo & ii_rnaGTpro)
sum(ii_rnaGTribo & ii_proGTrna)
sum(ii_riboGTrna & ii_rnaGTpro)
fisher.test(mat_fish, alternative = "two.sided")
mat_fish
PropTest(57/119, 1/22, N1 = 119, N = 22)
pnorm(3.96)
PropTest <- function(prop1, prop2, N1, N2) {
prop_all <- (prop1*N1 + prop2*N2)/(N1 + N2)
z <- (prop1 - prop2)/ sqrt( prop_all*(1-prop_all)*(1/N1 + 1/N2) )
pval <- 2*(1-pnorm(z))
list(z = z, pval = pval)
}
PropTest(57/119, 1/22, N1 = 119, N = 22)
load(file.path(rdadir, "eSetRRP.rda"))
boxplot(exprs(eSetRRP.RP.Q.log2[,eSetRRP.RP.Q.log2$seqData == "ribo"]))
eSetRPKM
load(file.path(rdadir, "eSetRPKM.rda"))
load(file.path(rdadir, "normeddatasub.rda"))
load(file.path(rdadir, "normeddatasub.rda"))
eSetRPKM
boxplot(exprs(eSetRPKM.Q[,eSetRPKM.Q$seqData == "ribo"]))
boxplot(log2(exprs(eSetRPKM.Q[,eSetRPKM.Q$seqData == "ribo"])))
install_github("jhsiao999/Humanzee")
require(Humanzee)
PropTest
load(file.path(rdadir,"eSetRRP.rda"))
# eSetRRP.RP.Q.log2 includes standardizd RPKM values
# Take a subset of samples from human/rhesus in RNA and Ribo
eSet_human_rhesus <-
eSetRRP.RP.Q.log2[ , eSetRRP.RP.Q.log2$species != "chimp" &
eSetRRP.RP.Q.log2$seqData != "protein"]
# Interaction analys comparing RNA-Ribo between human and rhesus
res.riborna_human_rhesus <- interact2way(eSet_human_rhesus)
# Take a subset of samples from chimp/rhesus in RNA and RIbo
eSet_chimp_rhesus <-
eSetRRP.RP.Q.log2[ , eSetRRP.RP.Q.log2$species != "human" &
eSetRRP.RP.Q.log2$seqData != "protein"]
# Interaction analysis comparing RNA-Ribo between chimp and rhesus
res.riborna_chimp_rhesus <- interact2way_full_buffer(eSet_chimp_rhesus)
save(res.riborna_human_rhesus, res.riborna_chimp_rhesus,
file = file.path(rdadir,"TE_other_interspecies.rda"))
sum(res.riborna_chimp_rhesus$int.qval < .01)
sum(res.riborna$int.qval < .01)
eSetRRP.RP
normalize <- function(matExpr=NULL,eSet=NULL,geneLen=NULL,log=FALSE,method=c("quantile","rpkm","Cquant","cpm")) {
#eSet = eSetNone
suppressMessages(library(limma))
suppressMessages(library(DESeq))
suppressMessages(library(edgeR))
if (method=="cpm") {
# 1. CPM normalzation
matExpr = exprs(eSet)
libSize = colSums(matExpr,na.rm=T)
mat.cpm = t(t(matExpr)/libSize)*(10^6)
mat = log2(mat.cpm)
return(mat)
}
if (method=="quantile") {
if (log==TRUE) { mat = normalizeQuantiles(log2(matExpr)) }
if (log==FALSE) { mat = normalizeQuantiles(matExpr) }
return(mat)
}
if (method=="Cquant") {
# 1. CPM normalzation
# 2. Convert to RPKM
# 3. quantile normalization
matExpr = exprs(eSet)
ii = match(featureNames(eSet),geneLen$ENSGID)
length = geneLen[ii,2]
libSize = colSums(matExpr)
mat.cpm = t(t(matExpr)/libSize)*(10^6)
mat.rpkm = (mat.cpm/length)*1000
mat = normalizeQuantiles(log2(mat.rpkm+1))
return(mat)
}
if (method=="rpkm") {
#     eSet=eSetNone[,eSetNone$seqData=="rna"]
#     geneLen=fData(eSet[which(fData(eSet)$ENSGID %in% fData(eSetNone)$ENSGID),])
matExpr = exprs(eSet)
ii = match(featureNames(eSet),geneLen$ENSGID)
length = geneLen[ii,2]
libSize = colSums(matExpr,na.rm=T)
mat.cpm = t(t(matExpr)/libSize)*(10^6)
mat.rpkm = (mat.cpm/length)*1000
#     if (log==TRUE) {mat = log2(mat.rpkm+1) }
#     if (log==FALSE) {mat = mat.rpkm}
return(mat.rpkm)
}
#   if (method=="DESeq") {
#     cds = estimateSizeFactorsForMatrix(matExpr)
#     dmat = t(t(matExpr)/cds)
#     dmat = log2(dmat+1)
#     return(dmat)
#   }
}
summary(exprs(eSetRRP.RP))
eSetRRP.RP
ls()
qmatRNA <- normalize(exprs(eSetRRP.RP[,eSetRRP.RP$seqData=="rna"]),
geneLen = NULL,
method="quantile",log="TRUE")
qmatRIBO <- normalize(exprs(eSetRRP.RP[,eSetRRP.RP$seqData=="ribo"]),
geneLen = NULL,
method="quantile",log="TRUE")
str(qmatRNA)
colnames(exprs(eSetRRP.RP))
qmatMASS <- normalize(exprs(eSetRRP.RP[,eSetRRP.RP$seqData=="protein"]),
geneLen = NULL,
method="quantile",log="FALSE")
emat <- cbind(qmatRNA, qmatRIBO, qmatMASS)
eSetRRP.RP.Q.log2.post = ExpressionSet(assayData = emat,
phenoData=phenoData(eSetRRP.RP),
experimentData=experimentData(eSetRRP.RP))
featureData(eSetRRP.RP.RP.Q.log2.post) <- featureData(eSetRRP.RP.Q.log2.post)
featureData(eSetRRP.RP.Q.log2.post) <- featureData(eSetRRP.RP.Q.log2.post)
eSet.post_human_chimp <-
eSetRRP.RP.Q.log2.post[ , eSetRRP.RP.Q.log2.post$species != "rhesus" &
eSetRRP.RP.Q.log2.post$seqData != "protein"]
eSet.post_human_rhesus <-
eSetRRP.RP.Q.log2.post[ , eSetRRP.RP.Q.log2.post$species != "chimp" &
eSetRRP.RP.Q.log2.post$seqData != "protein"]
eSet.post_chimp_rhesus <-
eSetRRP.RP.Q.log2.post[ , eSetRRP.RP.Q.log2.post$species != "human" &
eSetRRP.RP.Q.log2.post$seqData != "protein"]
res.riborna.post_human_chimp <- interact2way(eSet.post_human_chimp)
res.riborna.post_human_rhesus <- interact2way(eSet.post_human_rhesus)
res.riborna.post_chimp_rhesus <- interact2way(eSet.post_chimp_rhesus)
save(eSetRRP.RP.Q.log2.post,
res.riborna.post_human_chimp,
res.riborna.post_human_rhesus,
res.riborna.post_chimp_rhesus,
file = file.path(rdadir,"TE_other_interspecies.rda"))
save(eSetRRP.RP.Q.log2.post,
res.riborna.post_human_chimp,
res.riborna.post_human_rhesus,
res.riborna.post_chimp_rhesus,
file = file.path(rdadir,"TE_postQ.rda"))
save(res.riborna_human_rhesus, res.riborna_chimp_rhesus,
file = file.path(rdadir,"TE_other_interspecies.rda"))
sum(res.riborna.post_human_chimp$int.qval < .01)
sum(res.riborna.post_human_rhesus$int.qval < .01)
sum(res.riborna.post_chimp_rhesus$int.qval < .01)
boxplot(exprs(eSetRRP.RP.Q.log2.post[,eSetRRP.RP.Q.log2.post$seqData =="ribo"]))
library(Biobase)
## Set working directories
dir <- "../"
figdir <- file.path(dir,"figures")
rdadir <- file.path(dir,"rdas")
datadir <- file.path(dir, "data")
## Use broman package for colors
require(broman)
crayon <- brocolors("crayons")
## Load customized packages
require(devtools)
require(Humanzee)
## Load eSet of Ribosome profiling data only
load(file=file.path(rdadir,"eSetRiboProfile.rda"))
sum(ribo.Res.hr.nos$qval < .01)
sum(ribo.Res.hc.nos$qval < .01)
sum(ribo.Res.cr.nos$qval < .01)
sum(ribo.Res.rc.nos$qval < .01)
foo1 = rowMeans(exprs(eSet.ribo.rpkmq[,eSet.ribo.rpkmq$species=="human"])) - rowMeans(exprs(eSet.ribo.rpkmq[,eSet.ribo.rpkmq$species=="chimp"]))
foo2 = rowMeans(exprs(eSet.ribo.rpkm.nos.q[,eSet.ribo.rpkm.nos.q$species=="human"])) - rowMeans(exprs(eSet.ribo.rpkm.nos.q[,eSet.ribo.rpkm.nos.q$species=="chimp"]))
plot(foo2,foo1,xlim=c(-12,10),ylim=c(-12,10),axes=F,xlab="",ylab="")
title(ylab="log2 FC on standardized RPKM")
title(xlab="log2 FC on unstandardized RPKM")
title(main="human-versus-chimp FC comparison based on \n standardized RPKM values and unstandardized RPKM values")
axis(1);axis(2)
abline(a=0,b=1,col="red",lty=2)
# points(foo2[-log10(ribo.Res.hc$qval)>2],foo1[-log10(ribo.Res.hc$qval)>2],col="red")
# points(foo2[-log10(ribo.Res.hc.nos$qval)>2],foo1[-log10(ribo.Res.hc.nos$qval)>2],col="green")
