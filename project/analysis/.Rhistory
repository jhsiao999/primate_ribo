ylab = "log2(Human/Chimp) of Protein levels")
}
title(main = "RNA-Ribo non-buffered", outer = TRUE)
par()$oma
## Plot out effect sizes calculated from
## un-normalized data
plot_matrix <- cbind(xy.rnapro$rna, xy.rnapro$pro)
## Make a panel for 4 plots
par( mfrow = c(2,2), mar = c(4, 4, 3, 1), oma = c(1, 2, 1, 1),
cex.main = 1.2, cex.axis = 1)
title_list <- list("RNA-Protein buffered",
"RNA-Protein non-buffered",
"RNA-Protein no interaction")
index_list <-
list( ii_buff_pro_buff =
(ii_rnaGTpro & ii_sig_rnapro) & (ii_riboGTrna & ii_sig_rnaribo),
ii_buff_pro_nobuff =
(ii_proGTrna & ii_sig_rnapro) & (ii_riboGTrna & ii_sig_rnaribo),
ii_buff_no_interact = (!ii_sig_rnapro) & ii_riboGTrna & ii_sig_rnaribo )
col_list <- crayon[c("Orange Red", "Pine Green", "Violet Blue")]
for (i in 1:length(index_list)) {
plot(plot_matrix, col = "gray60", cex = .8, ann = FALSE, axes = FALSE)
points(plot_matrix[ which( index_list[[i]] ), ],
col = col_list[[i]], pch = 16, cex = .7)
abline(0, 1, v = 0, h = 0, col = crayon["Black"], lwd = .8)
axis(1); axis(2)
title(main = title_list[[i]],
xlab = "log2(Human/Chimp) RPKM of RNA levels",
ylab = "log2(Human/Chimp) of Protein levels")
}
title(main = "RNA-Ribo non-buffered", outer = TRUE)
require(matrixStats)
varmat <- lapply( seq_along( c("human","chimp") ), function(i) {
ii <- eSet.temp$species == c("human","chimp")[i]
eSet.tt <- eSet.temp[, ii]
emat <- lapply( seq_along( c("ribo","rna","protein") ), function(j) {
jj <- eSet.tt$seqData == c("ribo","rna","protein")[j]
rowVars( exprs(eSet.tt[, jj] ), na.rm=TRUE )
})
emat <- do.call(cbind, emat)
colnames(emat) <- c("ribo","rna","protein")
return( data.frame(emat) )
})
names(varmat) <- c("human","chimp")
varmat <- data.frame(
rna = (varmat$human$rna + varmat$chimp$rna)/2,
pro = (varmat$human$pro + varmat$chimp$pro)/2)
boxplot(log2(varmat[ (res.rnapro$int.qval < .01),] ),
main = "RNA-Protein interaction")
boxplot(log2(varmat[ !(res.rnapro$int.qval < .01),] ),
main = "RNA-Protein no interaction")
boxplot(log2(varmat[ (res.rnapro$int.qval < .01),] ),
main = "RNA-Protein interaction")
boxplot(log2(varmat[ !(res.rnapro$int.qval < .01),] ),
main = "RNA-Protein no interaction")
par(mfrow = c(2,2))
boxplot(log2(varmat[ (res.rnapro$int.qval < .01),] ),
main = "RNA-Protein interaction")
boxplot(log2(varmat[ !(res.rnapro$int.qval < .01),] ),
main = "RNA-Protein no interaction")
par(mfrow = c(2,2))
boxplot(log2(varmat[ (res.rnapro$int.qval < .01),] ),
main = "RNA-Protein interaction",
ylim = c(-10, 4))
boxplot(log2(varmat[ !(res.rnapro$int.qval < .01),] ),
main = "RNA-Protein no interaction",
ylim = c(-10, 4))
par( mfrow = c(2,2), mar = c(4, 4, 3, 1), oma = c(1, 2, 1, 1),
cex.main = 1.2, cex.axis = 1)
plot(plot_matrix, col = "gray60", cex = .8, ann = FALSE, axes = FALSE)
points(plot_matrix[ index_list[[3]] ), ],
col = crayon["Violet Blue"], pch = 16, cex = .7)
abline(0, 1, v = 0, h = 0, col = crayon["Black"], lwd = .8)
axis(1); axis(2)
title(main = "Per gene fold changes",
xlab = "log2(Human/Chimp) RPKM of RNA levels",
ylab = "log2(Human/Chimp) of Protein levels")
plot(varmat, col = "gray60", cex = .8, ann = FALSE, axes = FALSE)
points(varmat[ index_list[[3]] ), ],
col = crayon["Violet Blue"], pch = 16, cex = .7)
abline(0, 1, v = 0, h = 0, col = crayon["Black"], lwd = .8)
axis(1); axis(2)
title(main = "Per gene fold changes",
xlab = "log2(Human/Chimp) RPKM of RNA levels",
ylab = "log2(Human/Chimp) of Protein levels")
par( mfrow = c(2,2), mar = c(4, 4, 3, 1), oma = c(1, 2, 1, 1),
cex.main = 1.2, cex.axis = 1)
plot(plot_matrix, col = "gray60", cex = .8, ann = FALSE, axes = FALSE)
points(plot_matrix[ which( index_list[[3]] ), ],
col = crayon["Violet Blue"], pch = 16, cex = .7)
abline(0, 1, v = 0, h = 0, col = crayon["Black"], lwd = .8)
axis(1); axis(2)
title(main = "Per gene fold changes",
xlab = "log2(Human/Chimp) RPKM of RNA levels",
ylab = "log2(Human/Chimp) of Protein levels")
plot(varmat, col = "gray60", cex = .8, ann = FALSE, axes = FALSE)
points(varmat[ which( index_list[[3]] ), ],
col = crayon["Violet Blue"], pch = 16, cex = .7)
abline(0, 1, v = 0, h = 0, col = crayon["Black"], lwd = .8)
axis(1); axis(2)
title(main = "Per gene fold changes",
xlab = "log2(Human/Chimp) RPKM of RNA levels",
ylab = "log2(Human/Chimp) of Protein levels")
par( mfrow = c(2,2), mar = c(4, 4, 3, 1), oma = c(1, 2, 1, 1),
cex.main = 1.2, cex.axis = 1)
plot(plot_matrix, col = "gray60", cex = .8, ann = FALSE, axes = FALSE)
points(plot_matrix[ which( index_list[[3]] ), ],
col = crayon["Violet Blue"], pch = 16, cex = .7)
abline(0, 1, v = 0, h = 0, col = crayon["Black"], lwd = .8)
axis(1); axis(2)
title(main = "Per gene fold changes",
xlab = "log2(Human/Chimp) RPKM of RNA levels",
ylab = "log2(Human/Chimp) of Protein levels")
plot(log2(varmat), col = "gray60", cex = .8, ann = FALSE, axes = FALSE)
points(log2(varmat[ which( index_list[[3]] ), ]),
col = crayon["Violet Blue"], pch = 16, cex = .7)
abline(0, 1, v = 0, h = 0, col = crayon["Black"], lwd = .8)
axis(1); axis(2)
title(main = "Per gene fold changes",
xlab = "log2(Human/Chimp) RPKM of RNA levels",
ylab = "log2(Human/Chimp) of Protein levels")
par( mfrow = c(2,2), mar = c(4, 4, 3, 1), oma = c(1, 2, 1, 1),
cex.main = 1.2, cex.axis = 1)
ii_nobuff_no_interact <- (!ii_sig_rnapro) & ii_riboGTrna & ii_sig_rnaribo
plot(plot_matrix, col = "gray60", cex = .8, ann = FALSE, axes = FALSE)
points(plot_matrix[ which( ii_nobuff_no_interact ), ],
col = crayon["Violet Blue"], pch = 16, cex = .7)
abline(0, 1, v = 0, h = 0, col = crayon["Black"], lwd = .8)
axis(1); axis(2)
title(main = "Per gene fold changes",
xlab = "log2(Human/Chimp) RPKM of RNA levels",
ylab = "log2(Human/Chimp) of Protein levels")
plot(log2(varmat), col = "gray60", cex = .8, ann = FALSE, axes = FALSE)
points(log2(varmat[ which( ii_nobuff_no_interact ), ]),
col = crayon["Violet Blue"], pch = 16, cex = .7)
abline(0, 1, v = 0, h = 0, col = crayon["Black"], lwd = .8)
axis(1); axis(2)
title(main = "Per gene fold changes",
xlab = "log2(Human/Chimp) RPKM of RNA levels",
ylab = "log2(Human/Chimp) of Protein levels")
par( mfrow = c(2,2), mar = c(4, 4, 3, 1), oma = c(1, 2, 1, 1),
cex.main = 1.2, cex.axis = 1)
ii_buff_no_interact <- (!ii_sig_rnapro) & ii_rnaGTribo & ii_sig_rnaribo
plot(plot_matrix, col = "gray60", cex = .8, ann = FALSE, axes = FALSE)
points(plot_matrix[ which( ii_buff_no_interact ), ],
col = crayon["Violet Blue"], pch = 16, cex = .7)
abline(0, 1, v = 0, h = 0, col = crayon["Black"], lwd = .8)
axis(1); axis(2)
title(main = "Per gene fold changes",
xlab = "log2(Human/Chimp) RPKM of RNA levels",
ylab = "log2(Human/Chimp) of Protein levels")
plot(log2(varmat), col = "gray60", cex = .8, ann = FALSE, axes = FALSE)
points(log2(varmat[ which( ii_buff_no_interact ), ]),
col = crayon["Violet Blue"], pch = 16, cex = .7)
abline(0, 1, v = 0, h = 0, col = crayon["Black"], lwd = .8)
axis(1); axis(2)
title(main = "Per gene fold changes",
xlab = "log2(Human/Chimp) RPKM of RNA levels",
ylab = "log2(Human/Chimp) of Protein levels")
buffering_matrix_size <-
matrix(0, 4, 4,
dimnames = list(rnaribo = c("Ribo buffered",
"Ribo non-buffered",
"Column sum"),
rnapro = c("Protein buffered",
"Protein non-buffered",
"Row sum") ) )
buffering_matrix_size <-
matrix(0, 3, 3,
dimnames = list(rnaribo = c("Ribo buffered",
"Ribo non-buffered",
"Column sum"),
rnapro = c("Protein buffered",
"Protein non-buffered",
"Row sum") ) )
buffering_matrix_size[2,1] <-
sum( (ii_rnaGTpro )[ii_riboGTrna & ii_sig_rnaribo])
buffering_matrix_size[2,2] <-
sum( (ii_proGTrna )[ii_riboGTrna & ii_sig_rnaribo])
buffering_matrix_interact[2,3] <-
sum(ii_riboGTrna & ii_sig_rnaribo)
## Among the genes non-buffered at translation,
## count the number of genes buffered at protein,
## non-buffered at protein and the total number
buffering_matrix_size[2,1] <-
sum( (ii_rnaGTpro )[ii_riboGTrna & ii_sig_rnaribo])
buffering_matrix_size[2,2] <-
sum( (ii_proGTrna )[ii_riboGTrna & ii_sig_rnaribo])
buffering_matrix_interact[2,3] <-
sum(ii_riboGTrna & ii_sig_rnaribo)
buffering_matrix_size <-
matrix(0, 3, 3,
dimnames = list(rnaribo = c("Ribo buffered",
"Ribo non-buffered",
"Column sum"),
rnapro = c("Protein buffered",
"Protein non-buffered",
"Row sum") ) )
## Among the genes buffered at translation,
## count the number of genes buffered at protein,
## non-buffered at protein and the total number
buffering_matrix_size[1,1] <-
sum( (ii_rnaGTpro)[ii_rnaGTribo & ii_sig_rnaribo])
buffering_matrix_interact[1,2] <-
sum( (ii_proGTrna)[ii_rnaGTribo & ii_sig_rnaribo])
buffering_matrix_size[1,3] <-
sum(ii_rnaGTribo & ii_sig_rnaribo)
## Among the genes non-buffered at translation,
## count the number of genes buffered at protein,
## non-buffered at protein and the total number
buffering_matrix_size[2,1] <-
sum( (ii_rnaGTpro )[ii_riboGTrna & ii_sig_rnaribo])
buffering_matrix_size[2,2] <-
sum( (ii_proGTrna )[ii_riboGTrna & ii_sig_rnaribo])
buffering_matrix_size[2,3] <-
sum(ii_riboGTrna & ii_sig_rnaribo)
buffering_matrix_size <-
matrix(0, 3, 3,
dimnames = list(rnaribo = c("Ribo buffered",
"Ribo non-buffered",
"Column sum"),
rnapro = c("Protein buffered",
"Protein non-buffered",
"Row sum") ) )
## Among the genes buffered at translation,
## count the number of genes buffered at protein,
## non-buffered at protein and the total number
buffering_matrix_size[1,1] <-
sum( (ii_rnaGTpro)[ii_rnaGTribo & ii_sig_rnaribo])
buffering_matrix_size[1,2] <-
sum( (ii_proGTrna)[ii_rnaGTribo & ii_sig_rnaribo])
buffering_matrix_size[1,3] <-
sum(ii_rnaGTribo & ii_sig_rnaribo)
## Among the genes non-buffered at translation,
## count the number of genes buffered at protein,
## non-buffered at protein and the total number
buffering_matrix_size[2,1] <-
sum( (ii_rnaGTpro )[ii_riboGTrna & ii_sig_rnaribo])
buffering_matrix_size[2,2] <-
sum( (ii_proGTrna )[ii_riboGTrna & ii_sig_rnaribo])
buffering_matrix_size[2,3] <-
sum(ii_riboGTrna & ii_sig_rnaribo)
## Of all genes with sig. difference in translation efficiency,
## count the number of genes buffered at protein,
## non-buffered at protein, and no interaction between RNA and protein
buffering_matrix_size[3,1] <-
sum( (ii_rnaGTpro)[
(ii_rnaGTribo | ii_riboGTrna) & ii_sig_rnaribo] )
buffering_matrix_size[3,2] <-
sum( (ii_proGTrna)[
(ii_rnaGTribo | ii_riboGTrna) & ii_sig_rnaribo ] )
## No. of genes with sig. translation efficiency
buffering_matrix_size[3,3] <- sum(ii_sig_rnaribo)
buffering_matrix_size
sum((ii_rnaGTribo | ii_riboGTrna) & ii_sig_rnaribo)
sum( ( abs(xy.rnapro$rna) > abs(xy.rnapro$pro) )[ii_rnaGTribo & ii_sig_rnaribo] )
sum( abs(xy.rnapro$rna) > abs(xy.rnapro$pro) )
sum(ii_rnaGTpro)
str(ii_rnaGTpro)
str(abs(xy.rnapro$rna) > abs(xy.rnapro$pro))
rm(list=ls())
figdir <- file.path(dir,"figures")
rdadir <- file.path(dir,"rdas")
datadir <- file.path(dir, "data")
dir <- "../"
figdir <- file.path(dir,"figures")
rdadir <- file.path(dir,"rdas")
datadir <- file.path(dir, "data")
require(broman)
crayon <- brocolors("crayons")
## Load customized packages
require(devtools)
require(Humanzee)
## Load rdas of LRT results and compute fold change estimates using
## RPKM values before normalization.
## load LRT results of RNA vs. Ribo divergence
load(file.path(rdadir,"TEnew.rda"))
## load LRT results of RNA vs. Protein divergence
load(file.path(rdadir,"rnapro.rda"))
## Compute fold changes based on un-normalized data
## from the object eSetRRP.log2 in eSetRRP.rda
load( file.path(rdadir,"eSetRRP.rda") )
eSet.temp <- eSetRRP.log2[ ,eSetRRP.log2$species!="rhesus"]
fc.mat <- lapply( seq_along( c("human","chimp") ), function(i) {
ii <- eSet.temp$species == c("human","chimp")[i]
eSet.tt <- eSet.temp[, ii]
emat <- lapply( seq_along( c("ribo","rna","protein") ), function(j) {
jj <- eSet.tt$seqData == c("ribo","rna","protein")[j]
rowMeans( exprs(eSet.tt[, jj] ), na.rm=TRUE )
})
emat <- do.call(cbind, emat)
colnames(emat) <- c("ribo","rna","protein")
return( data.frame(emat) )
})
names(fc.mat) <- c("human","chimp")
dmat_unnormed <- data.frame( ribo = fc.mat$human$ribo-fc.mat$chimp$ribo,
rna = fc.mat$human$rna-fc.mat$chimp$rna,
pro = fc.mat$human$protein-fc.mat$chimp$protein )
xy.rnapro <- data.frame( rna = dmat_unnormed$rna,
pro = dmat_unnormed$pro )
xy.riborna <- data.frame( rna = dmat_unnormed$rna,
ribo = dmat_unnormed$ribo )
xy.ribopro <- data.frame( ribo = dmat_unnormed$ribo,
pro = dmat_unnormed$pro )
## Genes with sig. human/chimp difference in divergence between RNA and Ribo
ii_sig_rnaribo <- res.riborna$int.qval < .01
## Genes with RNA > Ribo in effect sizes
ii_rnaGTribo <- abs(xy.riborna$rna) > abs(xy.riborna$ribo)
## Genes with RNA < Ribo in effect sizes
ii_riboGTrna <- abs(xy.riborna$ribo) > abs(xy.riborna$rna)
## Genes with sig. human/chimp difference in divergence between RNA and protein
ii_sig_rnapro <- res.rnapro$int.qval < .01
## Genes with RNA > Protein in effect sizes
ii_rnaGTpro <- abs(xy.rnapro$rna) > abs(xy.rnapro$pro)
## Genes with RNA < Protein in effect sizes
ii_proGTrna <- abs(xy.rnapro$pro) > abs(xy.rnapro$rna)
buffering_matrix_interact <-
matrix(0, 4, 4,
dimnames = list(rnaribo = c("Ribo buffered & RNA-Ribo interaction",
"Ribo non-buffered & RNA-Ribo interaction",
"RNA-Ribo no interaction",
"Column sum"),
rnapro = c("Protein buffered & RNA-Protein interaction",
"Protein non-buffered & RNA-protein interaction",
"RNA-Protein no interaction",
"Row sum") ) )
## Among the genes buffered at translation,
## count the number of genes buffered at protein,
## non-buffered at protein, no interaction between RNA and protein,
## and the total number
buffering_matrix_interact[1,1] <-
sum( (ii_rnaGTpro & ii_sig_rnapro)[ii_rnaGTribo & ii_sig_rnaribo])
buffering_matrix_interact[1,2] <-
sum( (ii_proGTrna & ii_sig_rnapro)[ii_rnaGTribo & ii_sig_rnaribo])
buffering_matrix_interact[1,3] <-
sum( (!ii_sig_rnapro)[ii_rnaGTribo & ii_sig_rnaribo] )
buffering_matrix_interact[1,4] <-
sum(ii_rnaGTribo & ii_sig_rnaribo)
## Among the genes non-buffered at translation,
## count the number of genes buffered at protein,
## non-buffered at protein, no interaction between RNA and protein,
## and the total number
buffering_matrix_interact[2,1] <-
sum( (ii_rnaGTpro & ii_sig_rnapro)[ii_riboGTrna & ii_sig_rnaribo])
buffering_matrix_interact[2,2] <-
sum( (ii_proGTrna & ii_sig_rnapro)[ii_riboGTrna & ii_sig_rnaribo])
buffering_matrix_interact[2,3] <-
sum( (!ii_sig_rnapro)[ii_riboGTrna & ii_sig_rnaribo] )
buffering_matrix_interact[2,4] <-
sum(ii_riboGTrna & ii_sig_rnaribo)
## Of all genes with sig. difference in translation efficiency,
## count the number of genes buffered at protein,
## non-buffered at protein, and no interaction between RNA and protein
buffering_matrix_interact[4,1] <-
sum( (ii_rnaGTpro & ii_sig_rnapro)[
(ii_rnaGTribo | ii_riboGTrna) & ii_sig_rnaribo] )
buffering_matrix_interact[4,2] <-
sum( (ii_proGTrna & ii_sig_rnapro)[
(ii_rnaGTribo | ii_riboGTrna) & ii_sig_rnaribo ] )
buffering_matrix_interact[4,3] <-
sum((!ii_sig_rnapro)[ ii_sig_rnaribo] )
## No. of genes with sig. translation efficiency
buffering_matrix_interact[4,4] <- sum(ii_sig_rnaribo)
buffering_matrix_size <-
matrix(0, 3, 3,
dimnames = list(rnaribo = c("Ribo buffered",
"Ribo non-buffered",
"Column sum"),
rnapro = c("Protein buffered",
"Protein non-buffered",
"Row sum") ) )
sum( (ii_rnaGTpro)[ii_rnaGTribo & ii_sig_rnaribo])
buffering_matrix_size[1,1] <-
sum( (ii_rnaGTpro)[ii_rnaGTribo & ii_sig_rnaribo])
buffering_matrix_size[1,2] <-
sum( (ii_proGTrna)[ii_rnaGTribo & ii_sig_rnaribo])
buffering_matrix_size[1,3] <-
sum(ii_rnaGTribo & ii_sig_rnaribo)
## Among the genes non-buffered at translation,
## count the number of genes buffered at protein,
## non-buffered at protein and the total number
buffering_matrix_size[2,1] <-
sum( (ii_rnaGTpro )[ii_riboGTrna & ii_sig_rnaribo])
buffering_matrix_size[2,2] <-
sum( (ii_proGTrna )[ii_riboGTrna & ii_sig_rnaribo])
buffering_matrix_size[2,3] <-
sum(ii_riboGTrna & ii_sig_rnaribo)
## Of all genes with sig. difference in translation efficiency,
## count the number of genes buffered at protein,
## non-buffered at protein, and no interaction between RNA and protein
buffering_matrix_size[3,1] <-
sum( (ii_rnaGTpro)[
(ii_rnaGTribo | ii_riboGTrna) & ii_sig_rnaribo] )
buffering_matrix_size[3,2] <-
sum( (ii_proGTrna)[
(ii_rnaGTribo | ii_riboGTrna) & ii_sig_rnaribo ] )
## No. of genes with sig. translation efficiency
buffering_matrix_size[3,3] <- sum(ii_sig_rnaribo)
buffering_matrix_size
library(Biobase)
## Set working directories
dir <- "../"
figdir <- file.path(dir,"figures")
rdadir <- file.path(dir,"rdas")
datadir <- file.path(dir, "data")
## Use broman package for colors
require(broman)
crayon <- brocolors("crayons")
## Load customized packages
require(devtools)
require(Humanzee)
load(file.path(rdadir,"normeddatasub.rda"))
boxplot(exprs(eSetRPKM.Q))
boxplot(log2(exprs(eSetRPKM.Q)))
dim(exprs(eSetRPKM.Q))
boxplot(log2(exprs(eSetGM.Q)))
dim(exprs(eSetGM.Q))
pData(eSetRPKM.Q)
# Compare human and chimp
eset_human_chimp <- eSetRPKM.Q[ ,eSetRPKM.Q$species != "rhesus"]
res.riborna_full_human_chimp <- interact2way(eset_human_chimp)
hist(res.riborna_full_human_chimp$int.pval)
eset_human_chimp
boxplot(exprs(eset_human_chimp))
boxplot(log2(exprs(eset_human_chimp)))
emat <- exprs(eSetRPKM.Q)
emat.log2 <- log2(emat)
eSetRPKM.Q.log2 <- ExpressionSet(assayData = emat.log2,
phenoData = phenoData(eSetRPKM.Q),
experimentData = experimentData(eSetRPKM.Q) )
featureData(eSetRPKM.Q.log2) = featureData(eSetRPKM.Q)
eset_human_chimp <- eSetRPKM.Q.log2[ ,eSetRPKM.Q.log2$species != "rhesus"]
res.riborna_full_human_chimp <- interact2way(eset_human_chimp)
hist(res.riborna_full_human_chimp$int.pval)
# Compare chimp and rhesus
eset_chimp_rhesus <- eSetRPKM.Q.log2[ ,eSetRPKM.Q.log2$species != "human"]
res.riborna_full_chimp_rhesus <- interact2way(eset_chimp_rhesus)
# Compare human and rhesus
eset_human_rhesus <- eSetRPKM.Q.log2[ ,eSetRPKM.Q.log2$species != "chimp"]
res.riborna_full_human_rhesus <- interact2way(eset_human_rhesus)
save(eSetRPKM.Q.log2,
res.riborna_full_human_chimp,
res.riborna_full_chimp_rhesus,
res.riborna_full_human_rhesus,
file = file.path(rdadir,"TE_full.rda"))
par(mfrow = c(2,2))
plot_list <- list(human_chimp = res.riborna_full_human_chimp$int.pval,
chimp_rhesus = res.riborna_full_chimp_rhesus$int.pval,
human_rhesus = res.riborna_full_human_rhesus$int.pval)
for (i in 1: length(plot_list)) {
hist(plot_list[[i]], xlab = "p-value", main = names(plot_list)[i]
}
par(mfrow = c(2,2))
plot_list <- list(human_chimp = res.riborna_full_human_chimp$int.pval,
chimp_rhesus = res.riborna_full_chimp_rhesus$int.pval,
human_rhesus = res.riborna_full_human_rhesus$int.pval)
for (i in 1: length(plot_list)) {
hist(plot_list[[i]], xlab = "p-value", main = names(plot_list)[i] )
}
ngenes <- dim(res.riborna_full_human_chimp)[1]
sig_genes <-
data.frame(total_genes = ngenes,
human_chimp = sum(res.riborna_full_human_chimp$int.qval < .01),
human_rhesus = sum(res.riborna_full_human_rhesus$int.qval < .01),
chimp_rhesus = sum(res.riborna_full_chimp_rhesus$int.qval < .01) )
sig_genes
sum(is.na(res.riborna_full_human_rhesus$int.pval))
sig_genes <-
data.frame(total_genes = ngenes,
human_chimp = sum(res.riborna_full_human_chimp$int.qval < .01, na.rm = TRUE),
human_rhesus = sum(res.riborna_full_human_rhesus$int.qval < .01, na.rm = TRUE),
chimp_rhesus = sum(res.riborna_full_chimp_rhesus$int.qval < .01, na.rm = TRUE) )
sig_genes
na_mat <- data.frame(total_genes = ngenes,
human_chimp_na = sum(is.na(res.riborna_full_human_chimp$int.pval)),
human_rhesus_na = sum(is.na(res.riborna_full_human_rhesus$int.pval)),
chimp_rhesus_na = sum(is.na(res.riborna_full_chimp_rhesus$int.pval)) )
na_mat
ii_exclude_genes <- which(is.na(res.riborna_full_human_rhesus$int.pval))
ii_exclude_genes
exprs(eSetRPKM.Q.log2)[ii_exclude_genes, ]
ii_exclude_genes <- is.na(res.riborna_full_human_rhesus$int.pval)
exprs(eSetRPKM.Q.log2)[which(ii_exclude_genes), ]
sum(res.riborna_full_human_chimp$int.qval[
!ii_exclude_genes] < .01, na.rm = TRUE)
sum(res.riborna_full_human_chimp$int.qval < .01)
sum(res.riborna_full_human_chimp$int.qval[!ii_exclude_genes] < .01)
sum(res.riborna_full_human_chimp$int.qval[
which(!ii_exclude_genes)] < .01, na.rm = TRUE)
str(which(!ii_exclude_genes))
which(!ii_exclude_genes)
which(ii_exclude_genes)
res.riborna_full_human_chimp$int.qval[which(ii_exclude_genes)]
str(res.riborna_full_human_chimp$int.qval[
which(!ii_exclude_genes)])
sig_genes <-
data.frame(total_genes = ngenes - sum(ii_exclude_genes),
human_chimp = sum(res.riborna_full_human_chimp$int.qval[
which(!ii_exclude_genes)] < .01, na.rm = TRUE),
human_rhesus = sum(res.riborna_full_human_rhesu$int.qval[
which(!ii_exclude_genes)] < .01, na.rm = TRUE),
chimp_rhesus = sum(res.riborna_full_chimp_rhesus$int.qval[
which(!ii_exclude_genes)] < .01, na.rm = TRUE) )
sig_genes <-
data.frame(total_genes = ngenes - sum(ii_exclude_genes),
human_chimp = sum(res.riborna_full_human_chimp$int.qval[
which(!ii_exclude_genes)] < .01, na.rm = TRUE),
human_rhesus = sum(res.riborna_full_human_rhesus$int.qval[
which(!ii_exclude_genes)] < .01, na.rm = TRUE),
chimp_rhesus = sum(res.riborna_full_chimp_rhesus$int.qval[
which(!ii_exclude_genes)] < .01, na.rm = TRUE) )
sig_genes
